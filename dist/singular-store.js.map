{"version":3,"names":[],"mappings":"","sources":["singular-store.js"],"sourcesContent":["\"use strict\";\n/// <reference path=\"singular.ts\" />\n(function (singular) {\n    const { fromCharCode: FROM_CHAR_CODE } = String;\n    const { parse: PARSE, stringify: STRINGIFY } = JSON;\n    function toBinary(value) {\n        const units = new Uint16Array(value.length);\n        let current = units.length;\n        while (current-- > 0) {\n            units[current] = value.charCodeAt(current);\n        }\n        const codes = new Uint8Array(units.buffer);\n        const end = codes.length;\n        let result = '';\n        current = -1;\n        while (++current < end) {\n            result += FROM_CHAR_CODE(codes[current]);\n        }\n        return result;\n    }\n    function fromBinary(value) {\n        const bytes = new Uint8Array(value.length);\n        let current = bytes.length;\n        while (current-- > 0) {\n            bytes[current] = value.charCodeAt(current);\n        }\n        const codes = new Uint16Array(bytes.buffer);\n        const end = codes.length;\n        let result = '';\n        current = -1;\n        while (++current < end) {\n            result += FROM_CHAR_CODE(codes[current]);\n        }\n        return result;\n    }\n    function reverse(value) {\n        let result = '';\n        let current = value.length;\n        while (current-- > 0) {\n            result += value[current];\n        }\n        return result;\n    }\n    function getKey(value) {\n        return btoa(reverse(btoa(value)));\n    }\n    function setSession(name, value) {\n        sessionStorage.setItem(getKey(name), btoa(reverse(btoa(toBinary(STRINGIFY(value))))));\n        return singular;\n    }\n    function getSession(name) {\n        const value = sessionStorage.getItem(getKey(name));\n        return value ?\n            PARSE(fromBinary(atob(reverse(atob(value))))) :\n            value;\n    }\n    function popSession(name) {\n        sessionStorage.removeItem(getKey(name));\n        return singular;\n    }\n    function clearSession() {\n        sessionStorage.clear();\n        return singular;\n    }\n    singular.session = {\n        get: getSession,\n        set: setSession,\n        pop: popSession,\n        clear: clearSession\n    };\n})(window['singular']);\n"],"file":"singular-store.js"}